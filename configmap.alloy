

prometheus.scrape "node_exporter" {  
    targets = [{  
        __address__ = "10.43.171.73:9100",  
    }]  
    forward_to = [prometheus.relabel.keep_relevant_metrics.receiver]  
    job_name   = "node_exporter"  
}  
  
prometheus.relabel "keep_relevant_metrics" {  
    forward_to = [prometheus.remote_write.default.receiver]  
      
    // Keep essential metrics only  
    rule {  
        source_labels = ["__name__"]  
        regex = "(node_cpu_seconds_total|node_memory_.*_bytes|node_load.*|node_filesystem_(size|avail|free)_bytes|node_network_(receive|transmit)_bytes_total|node_disk_.*_total|node_boot_time_seconds|up|process_.*)"  
        action = "keep"  
    }  
      
    // Drop virtual network interfaces  
    rule {  
        source_labels = ["__name__", "device"]  
        regex = "node_network_.*;(veth.*|docker.*|flannel.*|cni.*|lo)"  
        action = "drop"  
    }  
}  
  
prometheus.remote_write "default" {  
    endpoint {  
        name = "prometheus-onprem"  
        url  = "https://prometheus-prod-13-prod-us-east-0.grafana.net/api/prom/push"  
  
        basic_auth {  
            username = "1646953"  
            password = "xxx"  
        }  
  
        queue_config {  
            capacity             = 1000  // Reduced since we're sending fewer metrics  
            max_shards           = 50    // Reduced accordingly  
            max_samples_per_send = 500  
        }  
  
        metadata_config {  
            max_samples_per_send = 200   // Reduced metadata  
        }  
    }  
}  